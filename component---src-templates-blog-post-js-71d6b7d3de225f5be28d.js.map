{"version":3,"file":"component---src-templates-blog-post-js-71d6b7d3de225f5be28d.js","mappings":"+KAKA,SAASA,EAAGC,GAAsC,IAArC,YAAEC,EAAW,KAAEC,EAAI,KAAEC,EAAI,MAAEC,GAAOJ,EAC7C,MAAM,KAAEK,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBN,GAAeI,EAAKG,aAAaP,YAEzD,OACEQ,EAAAA,cAACC,EAAAA,EAAM,CACLC,eAAgB,CACdT,QAEFE,MAAOA,EACPQ,cAAa,QAAUP,EAAKG,aAAaJ,MACzCD,KAAM,CACJ,CACEU,KAAK,cACLC,QAASP,GAEX,CACEQ,SAAS,WACTD,QAASV,GAEX,CACEW,SAAS,iBACTD,QAASP,GAEX,CACEQ,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAK,gBACLC,QAASV,GAEX,CACES,KAAK,sBACLC,QAASP,IAEXU,OAAOd,IAGf,CAEAJ,EAAImB,aAAe,CACjBhB,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,K,sGC1Ee,SAASkB,EAAQnB,GAAY,IAAX,KAAEoB,GAAMpB,EACvC,MAAMqB,EAAOD,EAAKE,eAClB,OACEb,EAAAA,cAACc,EAAAA,EAAM,KACLd,EAAAA,cAACV,EAAAA,EAAG,CAACK,MAAOiB,EAAKG,YAAYpB,MAAOH,YAAaoB,EAAKI,UACtDhB,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAKY,EAAKG,YAAYpB,OACtBK,EAAAA,cAAA,SAAIY,EAAKG,YAAYE,MACrBjB,EAAAA,cAAA,OAAKkB,wBAAyB,CAAEC,OAAQP,EAAKQ,SAIrD,C","sources":["webpack://gatsby-starter-hello-world/./src/components/seo.js","webpack://gatsby-starter-hello-world/./src/templates/blog-post.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nexport default function BlogPost({ data }) {\n  const post = data.markdownRemark\n  return (\n    <Layout>\n      <Seo title={post.frontmatter.title} description={post.excerpt} />\n      <div>\n        <h1>{post.frontmatter.title}</h1>\n        <i>{post.frontmatter.date}</i>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date\n        title\n      }\n      excerpt\n    }\n  }\n`\n"],"names":["Seo","_ref","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","React","Helmet","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","BlogPost","data","post","markdownRemark","Layout","frontmatter","excerpt","date","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}